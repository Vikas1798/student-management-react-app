{"version":3,"sources":["components/Navbar.js","components/Students.jsx","components/Studentadd.js","components/Studentdetailesedit.js","components/Pagenotfound.js","App.js","index.js"],"names":["Navbar","className","style","textDecoration","to","color","Students","useState","datas","setDatas","filteredData","setFilteredData","error","setError","loadData","a","axios","get","result","data","useEffect","deletedata","id","window","confirm","delete","type","placeholder","onChange","event","value","target","toLowerCase","filter","name","search","handleSearch","class","scope","map","dateOfBirth","age","gender","onClick","Studentadd","history","useHistory","students","setStudents","onInputChange","e","document","getElementById","isNaN","innerText","onSubmit","preventDefault","post","push","autoComplete","Studentdetailsedit","useParams","put","Pagenotfound","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2cbc1d85.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-1\"></div>\r\n          <div className=\"col-sm-10\">\r\n            <nav>\r\n              <ul className=\"navbar\">\r\n                {/* app heading and home page link */}\r\n                <Link style={{ textDecoration: \"none\" }} to=\"/\">\r\n                  <h1 style={{ color: \"green\" }}> Student Management</h1>\r\n                </Link>\r\n                <br />\r\n                {/* adding new student button with new page */}\r\n                <Link style={{ textDecoration: \"none\" }} to=\"/students/add\">\r\n                  <button className=\"btn btn-info\">Add Student</button>\r\n                </Link>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div className=\"col-sm-1\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";//used for fetchong\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Students = () => {\r\n  const [datas, setDatas] = useState([]);\r\n  const [filteredData, setFilteredData] = useState(datas);\r\n\r\n  //new state to catch the error message\r\n  const [error, setError] = useState(false);\r\n\r\n  // student searching\r\n  const handleSearch = (event) => {\r\n    let value = event.target.value.toLowerCase();\r\n    let result = [];\r\n    result = datas.filter((data) => {\r\n      return data.name.search(value) != -1;\r\n    });\r\n    setFilteredData(result);\r\n  };\r\n\r\n  // get json data from json server file i.e db.json\r\n  const loadData = async () => {\r\n\r\n    setError(false);\r\n    // try, catch is used to handle error for async, await functions.\r\n    try {\r\n      const result = await axios.get(\"http://localhost:8000/students\");\r\n      setDatas(result.data);\r\n      setFilteredData(result.data);\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  //student deletion with confirmation msg ask to delete\r\n  const deletedata = async (id) => {\r\n    if (window.confirm(\"Are you sure..! you want to delete student delete\")) {\r\n      await axios.delete(`http://localhost:8000/students/${id}`);\r\n      loadData();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-1\"></div>\r\n          <br /> <br /> <br />\r\n          {/* students data */}\r\n          <div className=\"col-sm-10\">\r\n            {/* searching  */}\r\n            <h3 style={{ color: \"blue\" }}> Search for the Student details </h3>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Search student name\"\r\n              onChange={(event) => handleSearch(event)}\r\n            />\r\n            <br /> <br />\r\n            {/* displaying error message on screen or else display json data (conditional rendering)  using ternary operator */}\r\n            {error ? (\r\n              <div style={{ color: `red` }}>\r\n                some error occurred, while fetching data from db.json file\r\n                please check the URL...\r\n              </div>\r\n            ) : (\r\n              <table class=\"table table-dark\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">id</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Date of Birth</th>\r\n                    <th scope=\"col\">Age</th>\r\n                    <th scope=\"col\">Gender</th>\r\n                    <th scope=\"col\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* mapping json data one by one */}\r\n                  {filteredData.map((data) => (\r\n                    <tr>\r\n                      <th>{data.id}</th>\r\n                      <td>{data.name}</td>\r\n                      <td>{data.dateOfBirth}</td>\r\n                      {/* checking age of student is less than 10 or not */}\r\n                      {data.age <= 10 ? (\r\n                        <td style={{ color: \"red\" }}>{data.age}</td>\r\n                      ) : (\r\n                        <td>{data.age}</td>\r\n                      )}\r\n                      <td>{data.gender}</td>\r\n                      <td>\r\n                        {/* edit student details button */}\r\n                        <Link to={`/students/edit/${data.id}`}>\r\n                          <button className=\"btn btn-primary mr-2\">Edit</button>\r\n                        </Link>\r\n                        {/* delete student details button */}\r\n                        <Link>\r\n                          <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => deletedata(data.id)}\r\n                          >\r\n                            Delete\r\n                          </button>\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n            <br />\r\n          </div>\r\n          <div className=\"col-sm-1\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Students;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Studentadd = () => {\r\n  let history = useHistory();\r\n\r\n  // creating a state to hold complete input value in a single state\r\n  const [students, setStudents] = useState({\r\n    name: \"\",\r\n    dateOfBirth: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n  });\r\n  // destructuring\r\n  const { name, dateOfBirth, age, gender } = students;\r\n\r\n  const onInputChange = (e) => {\r\n    setStudents({ ...students, [e.target.name]: e.target.value });\r\n\r\n  // age input field validation\r\n  // Get the value of the input field with id=\"number\"\r\n  let age = document.getElementById(\"number\").value;\r\n  // If age is Not a Number or less than 8\r\n\r\n  if (isNaN(age) || age < 8) {\r\n   \r\n    document.getElementById(\"demo\").innerText =  \"Input is not valid.Please enter >8 value\";\r\n   document.getElementById(\"demo\").style.color=\"red\";\r\n  } else {\r\n    document.getElementById(\"demo\").innerText =  \"Input is valid\";\r\n    document.getElementById(\"demo\").style.color=\"green\";\r\n  }\r\n \r\n\r\n  //name input field validation\r\n  let name = document.getElementById(\"name\").value;\r\n   if(name === \"\"){\r\n   document.getElementById(\"demoname\").innerText = \"please enter you name \";\r\n   document.getElementById(\"demoname\").style.color=\"red\";\r\n   }else {\r\n    document.getElementById(\"demoname\").innerText = \"Input OK,it is valid\";\r\n    document.getElementById(\"demoname\").style.color=\"green\";\r\n    }\r\n   \r\n   \r\n  //date of birth input field validation\r\n   let dob = document.getElementById(\"dob\").value;\r\n   if(dob === \"\"){\r\n    \r\n    document.getElementById(\"demodob\").innerText = \"please enter DOB in the form eg: 17,may,1998\";\r\n   document.getElementById(\"demodob\").style.color=\"red\";\r\n   }else {\r\n    document.getElementById(\"demodob\").innerText = \"Input OK,it is valid\";\r\n    document.getElementById(\"demodob\").style.color=\"green\";\r\n  }\r\n   \r\n  //gender input field validation\r\n  let gender = document.getElementById(\"gender\").value;\r\n  if( !isNaN(gender) || gender === \"\"){\r\n   \r\n   document.getElementById(\"demogender\").innerText = \"please enter your valid gender\";\r\n  document.getElementById(\"demogender\").style.color=\"red\";\r\n  }else {\r\n   document.getElementById(\"demogender\").innerText = \"it is valid\";\r\n   document.getElementById(\"demogender\").style.color=\"green\";\r\n }\r\n  };\r\n\r\n    // post the data to home page (table)  after submiting the form \r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post(\"http://localhost:8000/students\", students);\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-1\"></div>\r\n          <div className=\"col-sm-10\">\r\n            <h1> Add student</h1>\r\n            {/* form with name, age,gender and date of birth */}\r\n            <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n              <div className=\"form-group\">\r\n                {/* name input field */}\r\n                <lable>Name:</lable>\r\n                <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={(e) => onInputChange(e)}\r\n                />\r\n                <p id=\"demoname\"></p>\r\n                <br />\r\n\r\n                  {/* age input field */}\r\n                <lable>Age</lable>\r\n                <input\r\n                 id=\"number\"\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"enter your age\"\r\n                  name=\"age\"\r\n                  value={age}\r\n                  onChange={(e) => onInputChange(e)}\r\n                />\r\n                <p id=\"demo\"></p>\r\n                <br />\r\n                  {/* date of birth input field */}\r\n                <lable>DOB:</lable>\r\n                <input\r\n                  id=\"dob\"\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Enter your date of birth\"\r\n                  name=\"dateOfBirth\"\r\n                  value={dateOfBirth}\r\n                  onChange={(e) => onInputChange(e)}\r\n                />\r\n                 <p id=\"demodob\"></p>\r\n                <br />\r\n                  {/*gender input field */}\r\n\r\n                <lable>Gender</lable>\r\n                <input\r\n                id=\"gender\"\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"select your gender Male,Female,others\"\r\n                  name=\"gender\"\r\n                  value={gender}\r\n                  onChange={(e) => onInputChange(e)}\r\n                />\r\n                  <p id=\"demogender\"></p>\r\n                <br />\r\n                {/* form submitting button */}\r\n                <button className=\"btn btn-secondary\"> Add New student</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"col-sm-1\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Studentadd;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Studentdetailsedit = () => {\r\n  let history = useHistory(); //used for push rout from one page to another page\r\n  const { id } = useParams(); // used to delete the perticular selected student data with id\r\n\r\n  const [students, setStudents] = useState({\r\n    name: \"\",\r\n    dateOfBirth: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  const { name, dateOfBirth, age, gender } = students;\r\n\r\n  const onInputChange = (e) => {\r\n    setStudents({ ...students, [e.target.name]: e.target.value });\r\n\r\n    // age input field validation\r\n  // Get the value of the input field with id=\"number\"\r\n  let age = document.getElementById(\"number\").value;\r\n  // If age is Not a Number or less than 8\r\n\r\n  if (isNaN(age) || age < 8) {\r\n   \r\n    document.getElementById(\"demo\").innerText =  \"Input is not valid.Please enter >8 value\";\r\n   document.getElementById(\"demo\").style.color=\"red\";\r\n  } else {\r\n    document.getElementById(\"demo\").innerText =  \"Input is valid\";\r\n    document.getElementById(\"demo\").style.color=\"green\";\r\n  }\r\n \r\n\r\n  //name input field validation\r\n  let name = document.getElementById(\"name\").value;\r\n   if(name === \"\"){\r\n   document.getElementById(\"demoname\").innerText = \"please enter you name \";\r\n   document.getElementById(\"demoname\").style.color=\"red\";\r\n   }else {\r\n    document.getElementById(\"demoname\").innerText = \"Input OK,it is valid\";\r\n    document.getElementById(\"demoname\").style.color=\"green\";\r\n    }\r\n   \r\n   \r\n  //date of birth input field validation\r\n   let dob = document.getElementById(\"dob\").value;\r\n   if(dob === \"\"){\r\n    \r\n    document.getElementById(\"demodob\").innerText = \"please enter DOB in the form eg: 17,may,1998\";\r\n   document.getElementById(\"demodob\").style.color=\"red\";\r\n   }else {\r\n    document.getElementById(\"demodob\").innerText = \"Input OK,it is valid\";\r\n    document.getElementById(\"demodob\").style.color=\"green\";\r\n  }\r\n   \r\n  //gender input field validation\r\n  let gender = document.getElementById(\"gender\").value;\r\n  if( !isNaN(gender) || gender === \"\"){\r\n   \r\n   document.getElementById(\"demogender\").innerText = \"please enter your valid gender\";\r\n  document.getElementById(\"demogender\").style.color=\"red\";\r\n  }else {\r\n   document.getElementById(\"demogender\").innerText = \"it is valid\";\r\n   document.getElementById(\"demogender\").style.color=\"green\";\r\n }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  // data should be displayed on edit page (no empty input fields) to edit and update the data\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await axios.put(`http://localhost:8000/students/${id}`, students);\r\n    history.push(\"/\"); //onclick upadate and save button .as soon as it will route to home page\r\n  };\r\n\r\n  // again load the data\r\n  const loadData = async () => {\r\n    const result = await axios.get(`http://localhost:8000/students/${id}`);\r\n    setStudents(result.data);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-1\"></div>\r\n          <div className=\"col-sm-10\">\r\n            <h1> Edit Student Details student</h1>\r\n            <form autoComplete=\"off\" onSubmit={(e) => onSubmit(e)}>\r\n              <div className=\"form-group\">\r\n                <lable>Name:</lable>\r\n                <input\r\n                id=\"name\"\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Enter your name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={(e) => onInputChange(e)}\r\n                />\r\n                 <p id=\"demoname\"></p>\r\n                {/* age lable and input field with age validation */}\r\n                <lable>Age</lable>\r\n                <input\r\n                 \r\n                  id=\"number\"\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"enter your age\"\r\n                  name=\"age\"\r\n                  value={age}\r\n                  onChange={(e) => onInputChange(e)}\r\n                />\r\n                 <p id=\"demo\" ></p>\r\n\r\n                <lable>DOB:</lable>\r\n                <input\r\n                 id=\"dob\"\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Enter your date of birth\"\r\n                  name=\"dateOfBirth\"\r\n                  value={dateOfBirth}\r\n                  onChange={(e) => onInputChange(e)}\r\n                />\r\n                 <p id=\"demodob\"></p>\r\n\r\n                <lable>Gender</lable>\r\n                <input\r\n                id=\"gender\"\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"select your gender Male,Female,others\"\r\n                  name=\"gender\"\r\n                  value={gender}\r\n                  onChange={(e) => onInputChange(e)}\r\n                />\r\n                 <p id=\"demogender\"></p>\r\n                <br />\r\n                {/* update and save button */}\r\n                <button className=\"btn btn-warning\"> Update and Save </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"col-sm-1\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Studentdetailsedit;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pagenotfound = () => {\r\n  return (\r\n    <>\r\n      <div className=\"not-found\">\r\n            <h1> Ooops...! Page not found</h1>\r\n            <br />\r\n            <Link to=\"/\" className=\"button\">\r\n              <button className=\"btn btn-primary\">Home Page </button>\r\n            </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Pagenotfound;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";//used for dynamic routing without refreshing the page\nimport Navbar from \"./components/Navbar\";\nimport Students from \"./components/Students\";\nimport Studentadd from \"./components/Studentadd\";\nimport Studentdetailsedit from \"./components/Studentdetailesedit\";\nimport Pagenotfound from \"./components/Pagenotfound\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Students />\n          </Route>\n          <Route exact path=\"/students/add\">\n            <Studentadd />\n          </Route>\n          <Route exact path=\"/students/edit/:id\">\n            <Studentdetailsedit  />\n          </Route>\n          <Route exact path=\"*\">\n            <Pagenotfound />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n // \"predeploy\": \"npm run build\",\n  // \"deploy\": \"gh-pages -d build\",","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}